openapi: 3.1.0
info:
  title: 콘서트 예약 서비스 api
  description: 콘서트 시스템 api 명세서입니다.
  contact:
    name: Larry
    url: https://github.com/LK920
    email: hopeone1214@gmail.com
  license:
    name: MIT Licence
    url: https://opensource.org/licenses/MIT
  version: v1.0.0
servers:
  - url: http://localhost:8080
    description: Generated server url
tags:
  - name: 콘서트 api
    description: 콘서트 조회, 날짜를 조회하는 역할을 한다.
paths:
  /reservation/reserve:
    post:
      tags:
        - 콘서트 예약 / 예약 내역 조회 api
      summary: 콘서트를 예약한다
      description: 콘서트 리퀘스트 객체를 받아 콘서트 예약을 한다.
      operationId: reserveConcert
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ReserveRequestDTO'
        required: true
      responses:
        '200':
          description: OK
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/ReserveResponseDTO'
  /point/charge:
    post:
      tags:
        - 포인트 조회/충전 api
      summary: 포인트 충전
      description: userId와 amount를 파라미터로 포인트 충전한다
      operationId: chargeUserPoint
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PointRequestDTO'
        required: true
      responses:
        '200':
          description: OK
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/PointResponseDTO'
  /point/{userId}:
    get:
      tags:
        - 포인트 조회/충전 api
      summary: 포인트 조회
      description: userId를 파라미터를 받아 해당 유저의 포인트를 조회한다
      operationId: getUserPoint
      parameters: []
      responses:
        '200':
          description: OK
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/PointResponseDTO'
  /concert/{dateId}/seat:
    get:
      tags:
        - 콘서트 api
      summary: 예약 가능한 콘서트 좌석 조회 api
      description: 파라미터로 dateId 받는다
      operationId: getConcertAvailableSeats
      parameters: []
      responses:
        '200':
          description: OK
          content:
            '*/*':
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ConcertSeatResponseDTO'
  /concert/{concertId}/date:
    get:
      tags:
        - 콘서트 api
      summary: 예약 가능한 콘서트 날짜 조회 api
      description: 파라미터로 concertId를 받는다
      operationId: getConcertAvailableDates
      parameters: []
      responses:
        '200':
          description: OK
          content:
            '*/*':
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ConcertDateResponseDTO'
  /concert/list:
    get:
      tags:
        - 콘서트 api
      summary: 예약 가능한 콘서트를 조회 api
      operationId: getConcerts
      responses:
        '200':
          description: OK
          content:
            '*/*':
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ConcertResponseDTO'
components:
  schemas:
    ReserveRequestDTO:
      type: object
      properties:
        userId:
          type: integer
          format: int64
        seatId:
          type: integer
          format: int64
        seatPrice:
          type: integer
          format: int64
    ReserveResponseDTO:
      type: object
      properties:
        reservationId:
          type: integer
          format: int64
        userId:
          type: integer
          format: int64
        seatId:
          type: integer
          format: int64
        reservationStatus:
          type: string
    PointRequestDTO:
      type: object
      properties:
        userId:
          type: integer
          format: int64
        amount:
          type: integer
          format: int64
    PointResponseDTO:
      type: object
      properties:
        userId:
          type: integer
          format: int64
        userPoint:
          type: integer
          format: int64
    ConcertSeatResponseDTO:
      type: object
      properties:
        concertSeatId:
          type: integer
          format: int64
        concertSeatNumber:
          type: integer
          format: int64
        concertSeatPrice:
          type: integer
          format: int64
    ConcertDateResponseDTO:
      type: object
      properties:
        concertDateId:
          type: integer
          format: int64
        concertDate:
          type: string
    ConcertResponseDTO:
      type: object
      properties:
        concertId:
          type: integer
          format: int64
          description: 콘서트 id
          example: 1
        concertName:
          type: string
          description: 콘서트 이름
          example: 2025MusicConcert
        concertTotalSeats:
          type: integer
          format: int64
          description: '콘서트 총 좌석 수 '
          example: 50
